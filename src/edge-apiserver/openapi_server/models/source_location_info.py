# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class SourceLocationInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, location_country: str=None, location_latitude: float=None, location_longitude: float=None, location_quadkey: str=None):  # noqa: E501
        """SourceLocationInfo - a model defined in Swagger

        :param location_country: The location_country of this SourceLocationInfo.  # noqa: E501
        :type location_country: str
        :param location_latitude: The location_latitude of this SourceLocationInfo.  # noqa: E501
        :type location_latitude: float
        :param location_longitude: The location_longitude of this SourceLocationInfo.  # noqa: E501
        :type location_longitude: float
        :param location_quadkey: The location_quadkey of this SourceLocationInfo.  # noqa: E501
        :type location_quadkey: str
        """
        self.swagger_types = {
            'location_country': str,
            'location_latitude': float,
            'location_longitude': float,
            'location_quadkey': str
        }

        self.attribute_map = {
            'location_country': 'locationCountry',
            'location_latitude': 'locationLatitude',
            'location_longitude': 'locationLongitude',
            'location_quadkey': 'locationQuadkey'
        }
        self._location_country = location_country
        self._location_latitude = location_latitude
        self._location_longitude = location_longitude
        self._location_quadkey = location_quadkey

    @classmethod
    def from_dict(cls, dikt) -> 'SourceLocationInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SourceLocationInfo of this SourceLocationInfo.  # noqa: E501
        :rtype: SourceLocationInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location_country(self) -> str:
        """Gets the location_country of this SourceLocationInfo.


        :return: The location_country of this SourceLocationInfo.
        :rtype: str
        """
        return self._location_country

    @location_country.setter
    def location_country(self, location_country: str):
        """Sets the location_country of this SourceLocationInfo.


        :param location_country: The location_country of this SourceLocationInfo.
        :type location_country: str
        """

        self._location_country = location_country

    @property
    def location_latitude(self) -> float:
        """Gets the location_latitude of this SourceLocationInfo.


        :return: The location_latitude of this SourceLocationInfo.
        :rtype: float
        """
        return self._location_latitude

    @location_latitude.setter
    def location_latitude(self, location_latitude: float):
        """Sets the location_latitude of this SourceLocationInfo.


        :param location_latitude: The location_latitude of this SourceLocationInfo.
        :type location_latitude: float
        """

        self._location_latitude = location_latitude

    @property
    def location_longitude(self) -> float:
        """Gets the location_longitude of this SourceLocationInfo.


        :return: The location_longitude of this SourceLocationInfo.
        :rtype: float
        """
        return self._location_longitude

    @location_longitude.setter
    def location_longitude(self, location_longitude: float):
        """Sets the location_longitude of this SourceLocationInfo.


        :param location_longitude: The location_longitude of this SourceLocationInfo.
        :type location_longitude: float
        """

        self._location_longitude = location_longitude

    @property
    def location_quadkey(self) -> str:
        """Gets the location_quadkey of this SourceLocationInfo.


        :return: The location_quadkey of this SourceLocationInfo.
        :rtype: str
        """
        return self._location_quadkey

    @location_quadkey.setter
    def location_quadkey(self, location_quadkey: str):
        """Sets the location_quadkey of this SourceLocationInfo.


        :param location_quadkey: The location_quadkey of this SourceLocationInfo.
        :type location_quadkey: str
        """
        if location_quadkey is None:
            raise ValueError("Invalid value for `location_quadkey`, must not be `None`")  # noqa: E501

        self._location_quadkey = location_quadkey
